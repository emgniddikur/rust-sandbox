use std::collections::VecDeque;

fn main() {
    // Vecで効率的に追加、削除できるのは、末尾だけ
    // VecDequeは先頭と末尾の双方に対して、効率的に追加、削除できる

    // Vecと同様に、要素は1箇所のヒープ領域に格納される

    // データが常に領域の先頭から始まるわけではない
    // 領域の末尾と先頭が仮想的に接続されている

    // 二重先端キューは、連続したメモリ上に要素を格納していないので、スライスのメソッドをすべて継承することはできない
    // ベクタやスライスの操作を行うには、VecDequeからVecに変換して、元に戻す方法もある

    let v = VecDeque::from(vec![0]);
    println!("{:?}", v);
}
